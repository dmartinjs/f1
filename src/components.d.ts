/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppHome {
    }
    interface AppRaces {
    }
    interface AppRanks {
    }
    interface AppResults {
        /**
          * Id of the circuit
         */
        "circuitId"?: string;
        /**
          * Number of the round
         */
        "round"?: string;
        /**
          * Year of the season
         */
        "season"?: string;
    }
    interface AppRoot {
    }
    interface AppTabs {
    }
    interface ConstructorDetail {
        /**
          * Id of the constructor
         */
        "constructorId"?: string;
    }
    interface ConstructorRank {
        /**
          * Number of constructors displayed
         */
        "limit": number;
    }
    interface DriverDetail {
        /**
          * Id of the driver
         */
        "driverId"?: string;
    }
    interface DriverRank {
        /**
          * Number of constructors displayed
         */
        "limit": number;
    }
    interface QualifyingResults {
        /**
          * Number of the round
         */
        "round"?: string;
        /**
          * Year of the season
         */
        "season"?: string;
    }
    interface RaceDetail {
        /**
          * Id of the circuit
         */
        "circuitId"?: string;
        /**
          * Number of the round
         */
        "round"?: string;
        /**
          * Year of the season
         */
        "season"?: string;
    }
    interface RaceList {
        /**
          * set to `true` if you want to displaya list of past races
         */
        "past": boolean;
    }
    interface RaceNext {
    }
    interface RaceResults {
        /**
          * Number of the round
         */
        "round"?: string;
        /**
          * Year of the season
         */
        "season"?: string;
    }
}
declare global {
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppRacesElement extends Components.AppRaces, HTMLStencilElement {
    }
    var HTMLAppRacesElement: {
        prototype: HTMLAppRacesElement;
        new (): HTMLAppRacesElement;
    };
    interface HTMLAppRanksElement extends Components.AppRanks, HTMLStencilElement {
    }
    var HTMLAppRanksElement: {
        prototype: HTMLAppRanksElement;
        new (): HTMLAppRanksElement;
    };
    interface HTMLAppResultsElement extends Components.AppResults, HTMLStencilElement {
    }
    var HTMLAppResultsElement: {
        prototype: HTMLAppResultsElement;
        new (): HTMLAppResultsElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLAppTabsElement extends Components.AppTabs, HTMLStencilElement {
    }
    var HTMLAppTabsElement: {
        prototype: HTMLAppTabsElement;
        new (): HTMLAppTabsElement;
    };
    interface HTMLConstructorDetailElement extends Components.ConstructorDetail, HTMLStencilElement {
    }
    var HTMLConstructorDetailElement: {
        prototype: HTMLConstructorDetailElement;
        new (): HTMLConstructorDetailElement;
    };
    interface HTMLConstructorRankElement extends Components.ConstructorRank, HTMLStencilElement {
    }
    var HTMLConstructorRankElement: {
        prototype: HTMLConstructorRankElement;
        new (): HTMLConstructorRankElement;
    };
    interface HTMLDriverDetailElement extends Components.DriverDetail, HTMLStencilElement {
    }
    var HTMLDriverDetailElement: {
        prototype: HTMLDriverDetailElement;
        new (): HTMLDriverDetailElement;
    };
    interface HTMLDriverRankElement extends Components.DriverRank, HTMLStencilElement {
    }
    var HTMLDriverRankElement: {
        prototype: HTMLDriverRankElement;
        new (): HTMLDriverRankElement;
    };
    interface HTMLQualifyingResultsElement extends Components.QualifyingResults, HTMLStencilElement {
    }
    var HTMLQualifyingResultsElement: {
        prototype: HTMLQualifyingResultsElement;
        new (): HTMLQualifyingResultsElement;
    };
    interface HTMLRaceDetailElement extends Components.RaceDetail, HTMLStencilElement {
    }
    var HTMLRaceDetailElement: {
        prototype: HTMLRaceDetailElement;
        new (): HTMLRaceDetailElement;
    };
    interface HTMLRaceListElement extends Components.RaceList, HTMLStencilElement {
    }
    var HTMLRaceListElement: {
        prototype: HTMLRaceListElement;
        new (): HTMLRaceListElement;
    };
    interface HTMLRaceNextElement extends Components.RaceNext, HTMLStencilElement {
    }
    var HTMLRaceNextElement: {
        prototype: HTMLRaceNextElement;
        new (): HTMLRaceNextElement;
    };
    interface HTMLRaceResultsElement extends Components.RaceResults, HTMLStencilElement {
    }
    var HTMLRaceResultsElement: {
        prototype: HTMLRaceResultsElement;
        new (): HTMLRaceResultsElement;
    };
    interface HTMLElementTagNameMap {
        "app-home": HTMLAppHomeElement;
        "app-races": HTMLAppRacesElement;
        "app-ranks": HTMLAppRanksElement;
        "app-results": HTMLAppResultsElement;
        "app-root": HTMLAppRootElement;
        "app-tabs": HTMLAppTabsElement;
        "constructor-detail": HTMLConstructorDetailElement;
        "constructor-rank": HTMLConstructorRankElement;
        "driver-detail": HTMLDriverDetailElement;
        "driver-rank": HTMLDriverRankElement;
        "qualifying-results": HTMLQualifyingResultsElement;
        "race-detail": HTMLRaceDetailElement;
        "race-list": HTMLRaceListElement;
        "race-next": HTMLRaceNextElement;
        "race-results": HTMLRaceResultsElement;
    }
}
declare namespace LocalJSX {
    interface AppHome {
    }
    interface AppRaces {
    }
    interface AppRanks {
    }
    interface AppResults {
        /**
          * Id of the circuit
         */
        "circuitId"?: string;
        /**
          * Number of the round
         */
        "round"?: string;
        /**
          * Year of the season
         */
        "season"?: string;
    }
    interface AppRoot {
    }
    interface AppTabs {
    }
    interface ConstructorDetail {
        /**
          * Id of the constructor
         */
        "constructorId"?: string;
    }
    interface ConstructorRank {
        /**
          * Number of constructors displayed
         */
        "limit"?: number;
    }
    interface DriverDetail {
        /**
          * Id of the driver
         */
        "driverId"?: string;
    }
    interface DriverRank {
        /**
          * Number of constructors displayed
         */
        "limit"?: number;
    }
    interface QualifyingResults {
        /**
          * Number of the round
         */
        "round"?: string;
        /**
          * Year of the season
         */
        "season"?: string;
    }
    interface RaceDetail {
        /**
          * Id of the circuit
         */
        "circuitId"?: string;
        /**
          * Number of the round
         */
        "round"?: string;
        /**
          * Year of the season
         */
        "season"?: string;
    }
    interface RaceList {
        /**
          * set to `true` if you want to displaya list of past races
         */
        "past"?: boolean;
    }
    interface RaceNext {
    }
    interface RaceResults {
        /**
          * Number of the round
         */
        "round"?: string;
        /**
          * Year of the season
         */
        "season"?: string;
    }
    interface IntrinsicElements {
        "app-home": AppHome;
        "app-races": AppRaces;
        "app-ranks": AppRanks;
        "app-results": AppResults;
        "app-root": AppRoot;
        "app-tabs": AppTabs;
        "constructor-detail": ConstructorDetail;
        "constructor-rank": ConstructorRank;
        "driver-detail": DriverDetail;
        "driver-rank": DriverRank;
        "qualifying-results": QualifyingResults;
        "race-detail": RaceDetail;
        "race-list": RaceList;
        "race-next": RaceNext;
        "race-results": RaceResults;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-races": LocalJSX.AppRaces & JSXBase.HTMLAttributes<HTMLAppRacesElement>;
            "app-ranks": LocalJSX.AppRanks & JSXBase.HTMLAttributes<HTMLAppRanksElement>;
            "app-results": LocalJSX.AppResults & JSXBase.HTMLAttributes<HTMLAppResultsElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "app-tabs": LocalJSX.AppTabs & JSXBase.HTMLAttributes<HTMLAppTabsElement>;
            "constructor-detail": LocalJSX.ConstructorDetail & JSXBase.HTMLAttributes<HTMLConstructorDetailElement>;
            "constructor-rank": LocalJSX.ConstructorRank & JSXBase.HTMLAttributes<HTMLConstructorRankElement>;
            "driver-detail": LocalJSX.DriverDetail & JSXBase.HTMLAttributes<HTMLDriverDetailElement>;
            "driver-rank": LocalJSX.DriverRank & JSXBase.HTMLAttributes<HTMLDriverRankElement>;
            "qualifying-results": LocalJSX.QualifyingResults & JSXBase.HTMLAttributes<HTMLQualifyingResultsElement>;
            "race-detail": LocalJSX.RaceDetail & JSXBase.HTMLAttributes<HTMLRaceDetailElement>;
            "race-list": LocalJSX.RaceList & JSXBase.HTMLAttributes<HTMLRaceListElement>;
            "race-next": LocalJSX.RaceNext & JSXBase.HTMLAttributes<HTMLRaceNextElement>;
            "race-results": LocalJSX.RaceResults & JSXBase.HTMLAttributes<HTMLRaceResultsElement>;
        }
    }
}
